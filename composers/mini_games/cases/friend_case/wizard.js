const { Scenes } = require('telegraf')
const kb = require('../../../../keyboars.json')
const utils = require('../../../../utils')
const setTimeoutP = require('timers/promises').setTimeout


const back = async (ctx, edit = true) => {
  try {
    await ctx.scene.leave()
    const stat = await utils.getUserStats(ctx.chat.id)

    let txt = 'ü§´–ü–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º - –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—á—Ç–∏—Ç–µ F.A.Q.\n\n'
    txt += '–ó–¥–µ—Å—å –∫–µ–π—Å—ã –Ω–∞ –ª—é–±–æ–π –≤–∫—É—Å –∏ –≤—ã–±–æ—Ä\n'
    txt += '–í —Å–∫–æ–±–∫–∞—Ö —É–∫–∞–∑–∞–Ω–∞ —Ü–µ–Ω–∞ –∑–∞ –∫–µ–π—Å –≤ üí∞\n\n'
    txt += `–í—Å–µ–≥–æ –∫–µ–π—Å–æ–≤ –æ—Ç–∫—Ä—ã—Ç–æ: ${stat.cases_opened}`

    if (edit) {
      try {
        await ctx.editMessageText(txt, kb.cases_menu);
      } catch (e) {

      }
    } else {
      await ctx.reply(txt, kb.cases_menu);
    }
  } catch (e) {
    console.log(e)
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–¥–µ–ª–∞–π—Ç–µ —Å–∫—Ä–∏–Ω –≤–∞—à–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π –∏ –ø–µ—Ä–µ—à–ª–∏—Ç–µ –µ–≥–æ @GameNothingsupport_bot')

  }
}

const wizard_scenes = new Scenes.WizardScene(
  "friend_case",
  async (ctx) => {
    try {
      const user = await utils.getUserData(ctx.chat.id)

      let txt = '–í—Å–µ–≥–¥–∞ —Ö–æ—Ç–µ–ª —É–≤–∏–¥–µ—Ç—å —ç—Ç—É —Ñ—Ä–∞–∑—É?üòâ\n\n'
      txt += `${ctx.chat.username}, –∫–∏–¥–∞–π –∫—É–±–∏–∫ - —ç—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –¥–ª—è —Ç–µ–±—è! ‚ö°Ô∏è\n\n`
      txt += `–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: ${user.coins} üí∞`
      const mes = await ctx.editMessageText(txt, kb.friend_case)

      ctx.wizard.state.mid = mes.message_id
      return ctx.wizard.next()
    } catch (e) {
      console.log(e)
      await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–¥–µ–ª–∞–π—Ç–µ —Å–∫—Ä–∏–Ω –≤–∞—à–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π –∏ –ø–µ—Ä–µ—à–ª–∏—Ç–µ –µ–≥–æ @GameNothingsupport_bot')
      await back(ctx, false)
    }
  },

  async (ctx) => {
    try {
      const user = await utils.getUserData(ctx.chat.id)
      cb_data = ctx.callbackQuery.data

      if (user.coins < 10) {
        let txt = '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —É —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –º–æ–Ω–µ—Ç–æ–∫ –∏–ª–∏ –≥–µ–º–æ–≤ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è..\n\n'
        txt += '–¢—ã –º–æ–∂–µ—à—å –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∫–æ–ø–∏—Ç—å, –ª–∏–±–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –¥—Ä—É–≥–∏–µ –º–∏–Ω–∏-–∏–≥—Ä—ã.\n\n'
        txt += 'P.S. –ï—Å–ª–∏ –∂–µ –Ω–µ —Ö–æ—á–µ—à—å –∂–¥–∞—Ç—å - –º–æ–∂–µ—à—å –∑–∞–≥–ª—è–Ω—É—Ç—å –≤ "‚ù§Ô∏è –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å"'
        await ctx.editMessageText(txt, kb.back_cases_menu);
        return ctx.wizard.next()
      }

      if (user.friend_coin < 10) {
        let txt = '–£ —Ç–µ–±—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤\n'
        await ctx.editMessageText(txt, kb.back_cases_menu);
        return ctx.wizard.next()
      }

      if (cb_data && cb_data === 'friend_case') {
        const diceResult = await ctx.replyWithDice();
        const selectedResult = diceResult.dice.value;
        const rewards = {
          1: { name: "10 –º–æ–Ω–µ—Ç üí∞", type: "coins", amount: 5 },
          2: { name: "30 –º–æ–Ω–µ—Ç üí∞", type: "coins", amount: 25 },
          3: { name: "100 –º–æ–Ω–µ—Ç üí∞", type: "coins", amount: 50 },
          4: { name: "200 –º–æ–Ω–µ—Ç üí∞", type: "coins", amount: 75 },
          5: { name: "500 –º–æ–Ω–µ—Ç üí∞", type: "coins", amount: 100 },
          6: { name: "1000 –º–æ–Ω–µ—Ç üí∞", type: "coins", amount: 1000 },
        };


        await new Promise(resolve => setTimeout(resolve, 5000)); // –ó–∞–¥–µ—Ä–∂–∫–∞ –≤ 5 —Å–µ–∫—É–Ω–¥

        await ctx.deleteMessage(ctx.wizard.state.mid)
        await utils.increaseUserCaseOpened(ctx.chat.id);

        const rewardInfo = rewards[selectedResult];

        if (rewardInfo.type === "coins") {
          await utils.updateUserData(ctx.chat.id, 'coins', user.coins + rewardInfo.amount);
        }

        await utils.updateUserData(ctx.chat.id, 'coins', user['coins'] - 10);
        await utils.updateUserData(ctx.chat.id, 'friend_coin', user['friend_coin'] - 10);


        let txt = `–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –¢–µ–±–µ –≤—ã–ø–∞–ª–æ: ${rewardInfo.name}\n`
        txt += `–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: ${user.coins - 10} üí∞`

        await ctx.reply(txt, kb.back_try_again_cases_menu);
        return ctx.wizard.next()

      } else {
        await back(ctx)
      }
    } catch (e) {
      console.log(e)
      await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–¥–µ–ª–∞–π—Ç–µ —Å–∫—Ä–∏–Ω –≤–∞—à–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π –∏ –ø–µ—Ä–µ—à–ª–∏—Ç–µ –µ–≥–æ @GameNothingsupport_bot')
      await back(ctx, false)
    }
  },

  async (ctx) => {
    try {
      const user = await utils.getUserData(ctx.chat.id)
      const cb_data = ctx.callbackQuery?.data;

      if (cb_data === 'try_again') {
        ctx.scene.reenter()
      } else {
        await back(ctx)
      }
    } catch (e) {
      console.log(e)
      await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–¥–µ–ª–∞–π—Ç–µ —Å–∫—Ä–∏–Ω –≤–∞—à–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π –∏ –ø–µ—Ä–µ—à–ª–∏—Ç–µ –µ–≥–æ @GameNothingsupport_bot')
      await back(ctx, false)
    }
  }

)

module.exports = wizard_scenes

const { Scenes } = require('telegraf')
const kb = require('../../../../keyboars.json')
const utils = require('../../../../utils')

const back = async (ctx, edit = true) => {
    try {
        await ctx.scene.leave()
        const stat = await utils.getUserStats(ctx.chat.id)

        let txt = 'ü§´–ü–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º - –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—á—Ç–∏—Ç–µ F.A.Q.\n\n'
        txt += '–ó–¥–µ—Å—å –∫–µ–π—Å—ã –Ω–∞ –ª—é–±–æ–π –≤–∫—É—Å –∏ –≤—ã–±–æ—Ä\n'
        txt += '–í —Å–∫–æ–±–∫–∞—Ö —É–∫–∞–∑–∞–Ω–∞ —Ü–µ–Ω–∞ –∑–∞ –∫–µ–π—Å –≤ üí∞\n\n'
        txt += `–í—Å–µ–≥–æ –∫–µ–π—Å–æ–≤ –æ—Ç–∫—Ä—ã—Ç–æ: ${stat.cases_opened}`
        
        if (edit) {
            try {
                await ctx.editMessageText(txt, kb.cases_menu);
            }catch (e) {

            }
        } else {
            await ctx.reply(txt, kb.cases_menu);
        }
    } catch (e) {
        console.log(e)
        await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–¥–µ–ª–∞–π—Ç–µ —Å–∫—Ä–∏–Ω –≤–∞—à–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π –∏ –ø–µ—Ä–µ—à–ª–∏—Ç–µ –µ–≥–æ @GameNothingsupport_bot')
        
    }
}

const wizard_scenes = new Scenes.WizardScene(
    "high_risk",
    async (ctx) => {
        try {
            const user = await utils.getUserData(ctx.chat.id)

            let txt = '–ö—Ç–æ –Ω–µ —Ä–∏—Å–∫—É–µ—Ç, —Ç–æ—Ç –Ω–µ –ø—å—ë—Ç —à–∞–º–ø–∞–Ω—Å–∫–æ–µüçæ\n'
            txt += '–ò–ª–∏ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç –ª—É–Ω—É üåô\n\n'
            txt += '–ê–Ω–∞–ª–æ–≥ –≤—Å–µ–º–∏ –ª—é–±–∏–º–æ–≥–æ –∫–µ–π—Å–∞ "–í—Å—ë –∏–ª–∏ –ù–∏—á–µ–≥–æ"\n'
            txt += '–ò—Å–ø—ã—Ç–∞–µ—à—å —É–¥–∞—á—É?üòâ'
            
            const mes = await ctx.editMessageText(txt, kb.high_risk_start)
            ctx.wizard.state.mid = mes.message_id
            return ctx.wizard.next()
        }catch (e) {
            console.log(e)
            await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–¥–µ–ª–∞–π—Ç–µ —Å–∫—Ä–∏–Ω –≤–∞—à–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π –∏ –ø–µ—Ä–µ—à–ª–∏—Ç–µ –µ–≥–æ @GameNothingsupport_bot')
            await back(ctx, false)
        }
    },

    async (ctx) => {
        try {
            const user = await utils.getUserData(ctx.chat.id)
            const cb_data = ctx.callbackQuery?.data

            if (cb_data === 'start_case') {

                if (user.coins >= 100) {
                    const updatedCoins = user.coins - 100;
                    await utils.updateUserData(ctx.chat.id, 'coins', updatedCoins);

                    const possRes = [
                        { result: '–ë–ª–∞–≥–æ—Å–ª–æ–≤–µ–Ω–∏–µ –ø–æ–ª–æ–π –ª—É–Ω—ã üåô', chance: 0.1 },
                        { result: 'lose', chance: 99.9 },
                    ]
                    await utils.increaseUserCaseOpened(ctx.chat.id)
                    const result = await utils.getRandomResult(possRes);
                    if (result.result == 'lose') {
                        let txt = '–£–≤—ã, —Ç–µ–±–µ –¥–æ—Å—Ç–∞–ª–æ—Å—å Nothing..\n'
                        txt += '–ü–æ–ø—Ä–æ–±—É–µ–º –µ—â—ë —Ä–∞–∑?üòâ'
                        try {
                            await ctx.editMessageText(txt, kb.back_try_again_cases_menu)
                        }catch (e) {

                        }
                        return ctx.wizard.next()
                    } else {
                        await utils.updateUserData(ctx.chat.id, 'items', user.items + 1); // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö

                        let txt = '–í—ã —Ç–æ–ª—å–∫–æ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞ —ç—Ç–æ–≥–æ —Å—á–∞—Å—Ç–ª–∏–≤—á–∏–∫–∞!\n'
                        txt += '–ù–µ–≤–µ—Ä–æ—è—Ç–Ω–æ, üåô —Ç–≤–æ—è! üçæ'
                        try {
                            await ctx.editMessageText(txt, kb.back_try_again_cases_menu);
                        }catch (e) {

                        }
                        return ctx.wizard.next()
                    }

                } else {
                    let txt = '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —É —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –º–æ–Ω–µ—Ç–æ–∫ –∏–ª–∏ –≥–µ–º–æ–≤ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è..\n\n'
                    txt += '–¢—ã –º–æ–∂–µ—à—å –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∫–æ–ø–∏—Ç—å, –ª–∏–±–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –¥—Ä—É–≥–∏–µ –º–∏–Ω–∏-–∏–≥—Ä—ã.\n\n'
                    txt += 'P.S. –ï—Å–ª–∏ –∂–µ –Ω–µ —Ö–æ—á–µ—à—å –∂–¥–∞—Ç—å - –º–æ–∂–µ—à—å –∑–∞–≥–ª—è–Ω—É—Ç—å –≤ "‚ù§Ô∏è –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å"'
                    try {
                        await ctx.editMessageText(txt, kb.back_cases_menu);
                    }catch (e) {

                    }
                    return ctx.wizard.next()
                }
            } else {
                await back(ctx)
            }
        }catch (e) {
            console.log(e)
            await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–¥–µ–ª–∞–π—Ç–µ —Å–∫—Ä–∏–Ω –≤–∞—à–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π –∏ –ø–µ—Ä–µ—à–ª–∏—Ç–µ –µ–≥–æ @GameNothingsupport_bot')
            await back(ctx, false)
        }
    },

    async (ctx) => {
        try {
            cb_data = ctx.callbackQuery?.data

            if ( (cb_data === 'try_again')) {
                ctx.scene.reenter()
            } else {
                await back(ctx)
            }
        }catch (e) {
            console.log(e)
            await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–¥–µ–ª–∞–π—Ç–µ —Å–∫—Ä–∏–Ω –≤–∞—à–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π –∏ –ø–µ—Ä–µ—à–ª–∏—Ç–µ –µ–≥–æ @GameNothingsupport_bot')
            await back(ctx, false)
        }
    }

) 

module.exports = wizard_scenes
const { Composer } = require('telegraf');
const composer = new Composer();
const kb = require('../keyboars.json');
const utils = require('../utils');

const rewards = {
    1: 1,
    2: 5,
    3: 10,
    4: 15,
    5: 20,
    6: 25
};

composer.hears("üé≤ –ö–∏–¥–∞–π –∫—É–±–∏–∫", async (ctx) => {
    dropDice(ctx);
})

composer.action("drop_dice", async (ctx) => {
    await ctx.answerCbQuery();
    dropDice(ctx);
});

async function dropDice(ctx) {
    try {
        const user = await utils.getUserData(ctx.from.id);
        const stat = await utils.getUserStats(ctx.from.id);

        if (!stat) {
            await utils.createUserStats(ctx.from.id);
        }

        if (user['rolls'] <= 0) {
            ctx.reply('–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±—Ä–æ—Å–∫–æ–≤', kb.drop_dice_menu);
            return;
        }

        const diceResult = await ctx.replyWithDice();

        const selectedResult = diceResult.dice.value;
        const reward = rewards[selectedResult];

        if (reward === undefined) {
            // –ï—Å–ª–∏ –Ω–∞–≥—Ä–∞–¥–∞ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞, –æ–±—Ä–∞–±–æ—Ç–∞–π—Ç–µ –æ—à–∏–±–∫—É
            ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ –Ω–∞–≥—Ä–∞–¥—ã');
            return;
        }

        await utils.updateUserData(ctx.from.id, 'coins', user['coins'] + reward);
        await utils.updateUserData(ctx.from.id, 'rolls', user['rolls'] - 1);

        await utils.increaseUserRolls(ctx.from.id);
        await utils.increaseUserEarned(ctx.from.id, reward);

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ–º —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(async () => {
            let resultMessage = `–¢—ã –±—Ä–æ—Å–∏–ª –∫—É–±–∏–∫ –∏ —Ç–µ–±–µ –≤—ã–ø–∞–ª–æ: ${selectedResult} üé≤\n\n`;
            resultMessage += `–¢–≤–æ—è –Ω–∞–≥—Ä–∞–¥–∞ —Å–æ—Å—Ç–∞–≤–∏–ª–∞: ${reward} üí∞\n\n`
            resultMessage += `–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: ${user.coins + reward} üí∞\n`
            resultMessage += `–û—Å—Ç–∞–ª–æ—Å—å –±—Ä–æ—Å–∫–æ–≤: ${user.rolls - 1} üé≤`
            ctx.reply(resultMessage, kb.drop_dice_menu);
        }, 5000);
    } catch (e) {
        console.log(e);
    }
}

module.exports = composer;
